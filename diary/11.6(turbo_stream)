知識として入った部分を覚書

今回学んでいるturbo_streamは勝手にHTMLフォーマットの延長線、カスタマイズした書き方かと思っていたのだが
turbo_streamは機能でありつつ、新しいフォーマットであるという事が分かった

よくよく考えればなるほど、ファイル名のhtml.erbのhtml部分をturbo_streamに書き換えたものを用意するのだから、別物という事になるかと理解した。

この処理に関しては別フォーマットを利用する事から
[respond_to]の処理を利用する事が出来るという部分も一つ学んだ

このrespond_toメソッドは簡単に言うと
ブロック内に記述したフォーマット毎に実行する処理を変更する事が出来るメソッド
まだJSONに関して深く学んでいないのでそこまでは書けないけれど

例えば

class UsersController < ApplicationController
  def index
    @users = [
      { name: "田中", age: 22 },
      { name: "伊藤", age: 19 }
    ]

    respond_to do |format|
      # リクエストされるフォーマットがHTML形式の場合
      format.html 

      # リクエストされるフォーマットがJSON形式の場合
      format.json { render json: @users } 
      # @usersをjson形式のデータへ変換して返す
    end
  end
end

このように使用する事が出来るらしい
ユーザーがindexへアクセスする際、リクエストされたフォーマット毎に認識してここで指定した形式で返す、という形

どこかの記事ではJSON形式を明示的に指定しておかなければエラーが出る場合もあると読んだので、
これも覚えておくといいかもしれない


