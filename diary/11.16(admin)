本日は新しい課題
管理画面を実装し、管理ユーザーだけが操作できる情報を搭載していく

１、ユーザーへ管理機能を付ける時は[enum]を使うと楽

まずはuserテーブルへroleカラムを追加する作業を実施
その際にマイグレーションファイルへは[default: 0]と記述しておく

そうするとマイグレーション後、すべてのユーザーへroleカラムに０と入った状態で追加されるし、
今後作成されるユーザーもすべて０が付いてくれる

次にこの0へ意味づけを行う
この時に使用するのがモデル内メソッドの[enum]という機能
これでテーブル内で付けた整数(データ型がintegerのもの)を分かりやすい名前の変数へ代入することが出来る

今回は権限がないユーザーは0、管理者には1と振り分けることにする
その際、記述方法は以下になる
  enum role: {
    general: 0,
    admin: 1
  }
  各箇所の意味は
  enum カラム名: {
    変数名: 0,
    変数名: 1
  }
となる

個人的に面白いと思ったのは、railsコンソールからUser情報を取得した時、このroleカラムに入っている整数。
これが上記のenumを記述した上でmigrateすると、表示情報がちゃんと
role: 0　だったものが
role: generalに変わっていた事

これはつまり
roleを呼び出す=>0をgeneralに代入=>general(0)としての処理を進行
ではなくて
roleを呼び出す=>generalとしての処理を進行
という風に、中間処理の手間が省かれる状態になっているって事だ

正確な処理は分からないし活かし方も分からないけれど
可逆的な処理で呼び出し時の内容自体から書き換えられている状態になるのは興味深かった



